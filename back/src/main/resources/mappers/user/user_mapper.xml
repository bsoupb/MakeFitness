<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="korit.com.make_fitness.mapper.UserMapper">

    <resultMap id="UserResultMap" type="korit.com.make_fitness.entity.User">
        <id column="user_id" property="userId" />
        <result property="roleName" column="role_name" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="email" column="email" />
        <result property="nickname" column="nickname" />
        <result property="ph" column="ph" />
        <result property="gender" column="gender" />
        <result property="accountExpired" column="account_expired" />
        <result property="accountLocked" column="account_locked" />
        <result property="credentialsExpired" column="credentials_expired" />
        <result property="accountEnabled" column="account_enabled" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into user_tb
        values (
            default,
            'ROLE_ANONYMOUS',
            #{username},
            #{password},
            #{email},
            #{nickname},
            #{ph},
            #{gender},
            #{accountExpired},
            #{accountLocked},
            #{credentialsExpired},
            #{accountEnabled},
            now(),
            now()
        )
    </insert>

    <update id="updateUserRoleToCustomer" parameterType="int">
        update
            user_tb
        set
            role_name = 'ROLE_CUSTOMER'
        where
            user_id = #{userId}
    </update>

    <select id="selectByUsername" resultMap="UserResultMap">
        select
            user_id,
            role_name,
            username,
            password,
            email,
            nickname,
            ph,
            gender,
            account_expired,
            account_locked,
            credentials_expired,
            account_enabled,
            created_at,
            updated_at
        from
            user_tb
        where
            username = #{username}
    </select>

    <select id="selectByUserId" resultMap="UserResultMap">
        select
            user_id,
            role_name,
            username,
            password,
            email,
            nickname,
            ph,
            gender,
            account_expired,
            account_locked,
            credentials_expired,
            account_enabled,
            created_at,
            updated_at
        from
            user_tb
        where
            user_id = #{userId}
    </select>

    <select id="selectNickNameByUserId" resultType="string">
        select
            nickname
        from
            user_tb
        where
            user_id = #{userId}
    </select>

    <update id="updatePasswordByUserId" keyProperty="userId">
        update
            user_tb
        set
            password = #{password}
        where
            user_id = #{userId}
    </update>
</mapper>