<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="korit.com.make_fitness.mapper.ReservationMapper">

    <resultMap id="ReservationResultMap" type="korit.com.make_fitness.entity.Reservation">
        <id property="reservationId" column="reservation_id"/>
        <result property="classId" column="class_id"/>
        <result property="membershipId" column="membership_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <insert id="insertReservation" parameterType="korit.com.make_fitness.dto.request.ReqReservationDto" keyProperty="reservationId" useGeneratedKeys="true">
        insert into reservation_tb (class_id, membership_id, created_at, updated_at)
        select
            #{classId}, #{membershipId}, now(), now()
        from dual
        <![CDATA[
        where exists (
            select 1
            from class_tb c
            join class_subject_tb cs on c.class_subject_id = cs.class_subject_id
            join membership_tb m on m.membership_id = #{membershipId}
            left join pay_tb p on p.user_id = m.user_id and p.manager_id = c.user_id
            where
                c.class_id = #{classId}
                and (cs.class_subject_name = 'pt' or cs.class_subject_name = 'Pilates')
                and p.pay_id is not null
                and m.promotion_session_count > 0
                and c.class_customer_reserve < c.class_max_customer
                and not exists (
                    select 1
                    from reservation_tb r
                    where r.class_id = c.class_id and r.membership_id = m.membership_id
                )
        )
        ]]>
    </insert>

    <delete id="deleteReservationById">
        delete from reservation_tb
        where
            reservation_id = #{reservationId}
    </delete>

    <select id="existsByClassAndMembership" resultType="boolean">
        select exists (
        select 1
        from
            reservation_tb
        where
            class_id = #{classId}
            and membership_id = #{membershipId}
        )
    </select>

    <select id="findReservationsByMembershipId" resultMap="ReservationResultMap">
        select *
        from
            reservation_tb
        where
            membership_id = #{membershipId}
    </select>

    <select id="findClassIdListByMembershipId" resultType="java.lang.Integer">
        select class_id
        from
            reservation_tb
        where
            membership_id = #{membershipId}
    </select>

    <select id="findById" resultMap="ReservationResultMap">
        select *
        from
            reservation_tb
        where
            reservation_id = #{reservationId}
    </select>

    <select id="findAvailablePromotionsByUserId" resultType="korit.com.make_fitness.dto.response.RespAvailablePromotionDto">
        select
            m.membership_id as membershipId,
            p.promotion_name as promotionName,
            trainer.nickname as trainerName,
            m.promotion_session_count as remainingSessionCount,
            m.expired_date as expiredDate
        from
            membership_tb m
            join promotion_tb p on m.promotion_id = p.promotion_id
            join pay_tb pay on pay.user_id = m.user_id and pay.promotion_id = p.promotion_id
            join user_tb trainer on trainer.user_id = pay.manager_id
        where
            m.user_id = #{userId}
            and m.promotion_session_count > 0
    </select>

    <select id="findTodayReservationsByMembershipId" resultType="korit.com.make_fitness.dto.response.RespMyTodayReservationDto">
        select
            r.reservation_id,
            c.class_time,
            u.nickname as trainer_name,
            cs.class_subject_name as class_subject
            from
            reservation_tb r
            join class_tb c on r.class_id = c.class_id
            join class_subject_tb cs on c.class_subject_id = cs.class_subject_id
            join membership_tb m on r.membership_id = m.membership_id
            join pay_tb p on m.promotion_id = p.promotion_id and m.user_id = p.user_id
            join user_tb u on u.user_id = p.manager_id
        where
            r.membership_id = #{membershipId}
            and DATE(c.class_time) = CURRENT_DATE
            and u.role_name = 'ROLE_MANAGER'
    </select>

    <select id="findAvailableClassesByMembershipId" resultType="korit.com.make_fitness.dto.response.RespClassReservationRow">
        <![CDATA[
        select
            c.class_id as classId,
            c.class_time as classTime,
            t.nickname as trainerName,
            cs.class_subject_name as classSubject,
            c.class_max_customer as maxCustomer,
            c.class_customer_reserve as currentCustomer
        from
            class_tb c
            join class_subject_tb cs on c.class_subject_id = cs.class_subject_id
            join membership_tb m on m.membership_id = #{membershipId}
            join pay_tb p on m.promotion_id = p.promotion_id and m.user_id = p.user_id
            join user_tb t on t.user_id = p.manager_id
        where
            date(c.class_time) >= CURRENT_DATE
            and m.promotion_session_count > 0
            and c.user_id = p.manager_id
            and not exists (
                select 1
                from reservation_tb r
                where r.class_id = c.class_id
                and r.membership_id = #{membershipId}
            )
        order by c.class_time
        ]]>
    </select>

    <select id="findReservationHistoryByMembershipId" resultType="korit.com.make_fitness.dto.response.RespReservationHistoryDto">
        <![CDATA[
    select
        r.reservation_id as reservationId,
        c.class_id as classId,
        c.class_time as classTime,
        u.nickname as trainerName,
        cs.class_subject_name as classSubject,
        false as attended,
        false as canceled
    from
        reservation_tb r
        join class_tb c on r.class_id = c.class_id
        join class_subject_tb cs on c.class_subject_id = cs.class_subject_id
        join membership_tb m on r.membership_id = m.membership_id
        join pay_tb p on m.promotion_id = p.promotion_id and m.user_id = p.user_id
        join user_tb u on u.user_id = p.manager_id
    where
        r.membership_id = #{membershipId}
        and date(c.class_time) < CURRENT_DATE
        and u.role_name = 'ROLE_MANAGER'
    order by c.class_time desc
    ]]>
    </select>

    <delete id="cancelReservationsByClassId" parameterType="int">
        delete
            from reservation_tb
        where
            class_id = #{classId}
    </delete>

    <select id="findReservationsByClassId" resultMap="ReservationResultMap">
        select *
        from
            reservation_tb
        where
            class_id = #{classId}
    </select>

    <select id="findMembershipIdsByClassId" resultType="java.lang.Integer">
        select distinct membership_id
        from reservation_tb
        where class_id = #{classId}
    </select>

</mapper>
